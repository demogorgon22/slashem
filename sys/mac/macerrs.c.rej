***************
*** 8,52 ****
  
  #include "hack.h"
  #include "macwin.h"
- 
- #include <OSUtils.h>
- #include <files.h>
- #include <Types.h>
- #ifdef MAC_MPW32
- #include <String.h>
- #include <Strings.h>
- #else
- # ifdef __MWERKS__
- #  include <strings.h>
- # else
- #  include <pascal.h>
- # endif
- #endif
  #include <Dialogs.h>
! #include <Packages.h>
! #include <ToolUtils.h>
  #include <Resources.h>
  
! #define stackDepth  4
  #define errAlertID 129
  #define stdIOErrID 1999
  
! static void VDECL(vprogerror,(const char *line, va_list the_args));
! 
! static Str255 gActivities[stackDepth] = {"","","",""};
! static short gTopactivity = 1;
! 
! #if 0	/* Apparently unused */
! void comment(char *s, long n)
! {
! 	Str255 paserr;
! 	short itemHit;
! 	
! 	sprintf((char *)paserr, "%s - %d",s,n);
! 	ParamText(c2pstr((char *)paserr),(StringPtr)"",(StringPtr)"",(StringPtr)"");
! 	itemHit = Alert(128, (ModalFilterUPP)nil);
! }
! #endif	/* Apparently unused */
  
  void showerror(char * errdesc, const char * errcomment)
  {
--- 8,23 ----
  
  #include "hack.h"
  #include "macwin.h"
  #include <Dialogs.h>
! #include <TextUtils.h>
  #include <Resources.h>
  
! #define stackDepth  1
  #define errAlertID 129
  #define stdIOErrID 1999
  
! static Str255 gActivities[stackDepth] = {""};
! static short gTopactivity = 0;
  
  void showerror(char * errdesc, const char * errcomment)
  {
***************
*** 55,64 ****
  				pascomment;
  				
  	SetCursor(&qd.arrow);
! 	if (errcomment == nil) pascomment[0] = '\0';
! 	else strcpy((char *)pascomment,(char *)errcomment);
! 	strcpy((char *)paserr,(char *)errdesc);
! 	ParamText(c2pstr((char *)paserr),c2pstr((char *)pascomment),gActivities[gTopactivity],(StringPtr)"");
  	itemHit = Alert(errAlertID, (ModalFilterUPP)nil);
  }
  
--- 26,35 ----
  				pascomment;
  				
  	SetCursor(&qd.arrow);
! 	if (errcomment == nil) errcomment = "";
! 	C2P (errcomment, pascomment);
! 	C2P (errdesc, paserr);
! 	ParamText(paserr,pascomment,gActivities[gTopactivity],(StringPtr)"");
  	itemHit = Alert(errAlertID, (ModalFilterUPP)nil);
  }
  
***************
*** 84,91 ****
  			}
  		}
  		if (errdesc[0] == '\0') {  /* No description found, just give the number */
! 			sprintf((char *)errdesc,"a %d error occurred",errcode);
! 			(void)c2pstr((char *)errdesc);
  		}
  		SetCursor(&qd.arrow);
  		ParamText(errdesc,(StringPtr)"",gActivities[gTopactivity],(StringPtr)"");
--- 55,62 ----
  			}
  		}
  		if (errdesc[0] == '\0') {  /* No description found, just give the number */
! 			sprintf((char *)&errdesc[1],"a %d error occurred",errcode);
! 			errdesc[0] = strlen((char*)&errdesc[1]);
  		}
  		SetCursor(&qd.arrow);
  		ParamText(errdesc,(StringPtr)"",gActivities[gTopactivity],(StringPtr)"");
***************
*** 131,152 ****
  error VA_DECL(const char *, line)
  #endif
  /* Do NOT use VA_START and VA_END in here... see above */
  
! 	if(!index(line, '%'))
! 		showerror("of an internal error",line);
! 	else {
! 		char pbuf[BUFSZ];
  		Vsprintf(pbuf,line,VA_ARGS);
! 		showerror("of an internal error",pbuf);
  	}
  }
  
  void attemptingto(char * activity)
  /* Say what we are trying to do for subsequent error-handling: will appear as x in an
     alert in the form "Could not x because y" */
  {
! 	strcpy((char *)gActivities[gTopactivity],activity);
! 	activity = (char *)c2pstr((char *)gActivities[gTopactivity]);
  }
  
  void pushattemptingto(char * activity)
--- 102,132 ----
  error VA_DECL(const char *, line)
  #endif
  /* Do NOT use VA_START and VA_END in here... see above */
+ 	char pbuf[BUFSZ];
  
! 	if(index(line, '%')) {
  		Vsprintf(pbuf,line,VA_ARGS);
! 		line = pbuf;
  	}
+ 	showerror("of an internal error",line);
  }
  
  void attemptingto(char * activity)
  /* Say what we are trying to do for subsequent error-handling: will appear as x in an
     alert in the form "Could not x because y" */
+ {	C2P(activity,gActivities[gTopactivity]);
+ }
+ 
+ #if 0 /* Apparently unused */
+ void comment(char *s, long n)
  {
! 	Str255 paserr;
! 	short itemHit;
! 	
! 	sprintf((char *)&paserr[1], "%s - %d",s,n);
! 	paserr[0] = strlen ((char*)&paserr[1]);
! 	ParamText(paserr,(StringPtr)"",(StringPtr)"",(StringPtr)"");
! 	itemHit = Alert(128, (ModalFilterUPP)nil);
  }
  
  void pushattemptingto(char * activity)
