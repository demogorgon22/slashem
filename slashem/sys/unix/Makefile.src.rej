***************
*** 61,67 ****
  #	For Bull DPX/2 systems at B.O.S. 2.0 or higher use the following:
  #
  # CC = gcc -ansi -D_BULL_SOURCE -D_XOPEN_SOURCE -D_POSIX_SOURCE
! # 
  #	If you are using GCC 2.2.2 or higher on a DPX/2, just use:
  #
  # CC = gcc -ansi
--- 63,69 ----
  #	For Bull DPX/2 systems at B.O.S. 2.0 or higher use the following:
  #
  # CC = gcc -ansi -D_BULL_SOURCE -D_XOPEN_SOURCE -D_POSIX_SOURCE
! #
  #	If you are using GCC 2.2.2 or higher on a DPX/2, just use:
  #
  # CC = gcc -ansi
***************
*** 129,148 ****
  #LD = gcc
  #LFLAGS = -Xlinker -soname=_APP_
  
  # flags for debugging:
  # CFLAGS = -g -I../include
  
  CFLAGS = -O -I../include
! LFLAGS = 
  
! # Only used for Qt interface (other interfaces are standard C)
! CXXFLAGS = -g $(CFLAGS) -I. -I$(QTDIR)/include
! # Qt is C++, so define the compiler and linker thus required:
! #CXX=g++
  #LD=g++
  
  # Set the WINSRC, WINOBJ, and WINLIB lines to correspond to your desired
  # combination of windowing systems.  Also set windowing systems in config.h.
  #
  # files for a straight tty port using no native windowing system
  WINTTYSRC = ../win/tty/getline.c ../win/tty/termcap.c ../win/tty/topl.c \
--- 134,163 ----
  #LD = gcc
  #LFLAGS = -Xlinker -soname=_APP_
  
+ # Only used for the Gnome interface.
+ # When including the Gnome interface, you need to include gnome specific
+ # directories.  The ones given below is the usual spot for linux systems.
+ # The paths are for glibconfig.h and gnomesupport.h respectively.
+ #
+ GNOMEINC=-I/usr/lib/glib/include -I/usr/lib/gnome-libs/include -I../win/gnome
+ 
  # flags for debugging:
  # CFLAGS = -g -I../include
  
  CFLAGS = -O -I../include
! LFLAGS =
  
! # The Qt and Be window systems are written in C++, while the rest of
! # NetHack is standard C.  If using Qt, uncomment the LD line here to get
! # the C++ libraries linked in.
! CXXFLAGS = $(CFLAGS) -I. -I$(QTDIR)/include
! CXX=g++
  #LD=g++
  
  # Set the WINSRC, WINOBJ, and WINLIB lines to correspond to your desired
  # combination of windowing systems.  Also set windowing systems in config.h.
+ # Note that if you are including multiple tiled window systems, you don't
+ # want two copies of tile.o, so comment out all but the first.
  #
  # files for a straight tty port using no native windowing system
  WINTTYSRC = ../win/tty/getline.c ../win/tty/termcap.c ../win/tty/topl.c \
***************
*** 162,170 ****
  #
  WINQTSRC = ../win/Qt/qt_win.cpp ../win/Qt/qt_clust.cpp
  WINQTOBJ = qt_win.o qt_clust.o tile.o
  
  #
! # 
  WINSRC = $(WINTTYSRC)
  WINOBJ = $(WINTTYOBJ)
  
--- 177,208 ----
  #
  WINQTSRC = ../win/Qt/qt_win.cpp ../win/Qt/qt_clust.cpp
  WINQTOBJ = qt_win.o qt_clust.o tile.o
+ #
+ # Files for a Gnome port
+ #
+ WINGNOMESRC = ../win/gnome/gnaskstr.c ../win/gnome/gnbind.c \
+ 	../win/gnome/gnglyph.c ../win/gnome/gnmain.c ../win/gnome/gnmap.c \
+ 	../win/gnome/gnmenu.c ../win/gnome/gnmesg.c ../win/gnome/gnopts.c \
+ 	../win/gnome/gnplayer.c ../win/gnome/gnsignal.c \
+ 	../win/gnome/gnstatus.c ../win/gnome/gntext.c ../win/gnome/gnyesno.c
+ WINGNOMEOBJ = gnaskstr.o gnbind.o gnglyph.o gnmain.o gnmap.o gnmenu.o \
+ 	gnmesg.o gnopts.o gnplayer.o gnsignal.o gnstatus.o gntext.o \
+ 	gnyesno.o tile.o
+ #
+ # Files for a Gem port
+ WINGEMSRC = ../win/gem/wingem.c ../win/gem/wingem1.c ../win/gem/load_img.c \
+ 	tile.c
+ WINGEMOBJ = wingem.o wingem1.o load_img.o tile.o
+ #
+ # Files for a BeOS InterfaceKit port -- not ready for prime time
+ WINBESRC =
+ WINBEOBJ =
+ #WINBESRC = ../win/BeOS/winbe.cpp ../win/BeOS/NHWindow.cpp \
+ #	../win/BeOS/NHMenuWindow.cpp ../win/BeOS/NHMapWindow.cpp tile.c
+ #WINBEOBJ = winbe.o NHWindow.o NHMenuWindow.o NHMapWindow.o tile.o
  
  #
! #
  WINSRC = $(WINTTYSRC)
  WINOBJ = $(WINTTYOBJ)
  
***************
*** 197,203 ****
  # libraries for KDE (with Qt)
  WINKDELIB = -lkdecore -lkdeui -lXext
  #
  #
  
  WINLIB = $(WINTTYLIB)
  
--- 235,248 ----
  # libraries for KDE (with Qt)
  WINKDELIB = -lkdecore -lkdeui -lXext
  #
+ # libraries for Gnome
+ WINGNOMELIB = -lgnomeui -lgnome -lart_lgpl -lgtk -lgdk -lpopt
+ #
+ # libraries for Gem port
+ WINGEMLIB = -le_gem -lgem
  #
+ # libraries for BeOS 
+ WINBELIB = -lbe
  
  WINLIB = $(WINTTYLIB)
  
***************
*** 275,280 ****
  
  # make NetHack
  GAME     = nethack
  
  # if you defined RANDOM in unixconf.h/tosconf.h since your system did not come
  # with a reasonable random number generator
--- 323,329 ----
  
  # make NetHack
  GAME     = nethack
+ # GAME     = nethack.prg
  
  # if you defined RANDOM in unixconf.h/tosconf.h since your system did not come
  # with a reasonable random number generator
***************
*** 322,335 ****
  	../sys/unix/unixunix.c ../sys/be/bemain.c
  
  # all windowing-system-dependent .c (for dependencies and such)
! WINCSRC = $(WINTTYSRC) $(WINX11SRC)
  # all windowing-system-dependent .cpp (for dependencies and such)
! WINCXXSRC = $(WINQTSRC)
  
  # .c files for this version (for date.h)
  VERSOURCES = $(HACKCSRC) $(SYSSRC) $(WINSRC) monstr.c vis_tab.c
  
! # .c files for all UNIX versions (for lint and tags)
  CSOURCES = $(HACKCSRC) $(SYSSRC) $(WINCSRC) monstr.c vis_tab.c
  
  
--- 371,384 ----
  	../sys/unix/unixunix.c ../sys/be/bemain.c
  
  # all windowing-system-dependent .c (for dependencies and such)
! WINCSRC = $(WINTTYSRC) $(WINX11SRC) $(WINGNOMESRC) $(WINGEMSRC)
  # all windowing-system-dependent .cpp (for dependencies and such)
! WINCXXSRC = $(WINQTSRC) $(WINBESRC)
  
  # .c files for this version (for date.h)
  VERSOURCES = $(HACKCSRC) $(SYSSRC) $(WINSRC) monstr.c vis_tab.c
  
! # .c files for all versions using this Makefile (for lint and tags)
  CSOURCES = $(HACKCSRC) $(SYSSRC) $(WINCSRC) monstr.c vis_tab.c
  
  
***************
*** 442,451 ****
  
  # Qt windowport meta-object-compiler output
  qt_kde0.moc: ../include/qt_kde0.h
! 	moc $< >$@
  
  qt_win.moc: ../include/qt_win.h
! 	moc $< >$@
  
  $(MAKEDEFS): ../util/makedefs.c  $(CONFIG_H) ../include/permonst.h \
  		../include/objclass.h ../include/monsym.h \
--- 493,502 ----
  
  # Qt windowport meta-object-compiler output
  qt_kde0.moc: ../include/qt_kde0.h
! 	$(QTDIR)/bin/moc ../include/qt_kde0.h > qt_kde0.moc
  
  qt_win.moc: ../include/qt_win.h
! 	$(QTDIR)/bin/moc ../include/qt_win.h > qt_win.moc
  
  $(MAKEDEFS): ../util/makedefs.c  $(CONFIG_H) ../include/permonst.h \
  		../include/objclass.h ../include/monsym.h \
***************
*** 462,468 ****
  spotless: clean
  	-rm -f a.out core $(GAME) Sys*
  	-rm -f ../include/date.h ../include/onames.h ../include/pm.h
! 	-rm -f monstr.c ../include/vis_tab.h vis_tab.c tile.c
  
  
  depend: ../sys/unix/depend.awk $(SYSCSRC) $(WINCSRC) $(WINCXXSRC) $(HACKCSRC)
--- 516,523 ----
  spotless: clean
  	-rm -f a.out core $(GAME) Sys*
  	-rm -f ../include/date.h ../include/onames.h ../include/pm.h
! 	-rm -f monstr.c ../include/vis_tab.h vis_tab.c tile.c *.moc
! 	-rm -f ../win/gnome/gn_rip.h
  
  
  depend: ../sys/unix/depend.awk $(SYSCSRC) $(WINCSRC) $(WINCXXSRC) $(HACKCSRC)
